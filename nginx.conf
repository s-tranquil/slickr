worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    charset   utf-8;
    keepalive_timeout  65;
	
	server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html;
        }
	}

	
	# server {
    #     listen       80;
	# 	listen 443 default_server ssl;
	# 	server_name localhost_ssl;

	# 	access_log /usr/share/nginx/access.log;
	# 	error_log /usr/share/nginx/error.log;

	# 	# Fake certs - fine for development purposes :-)
	# 	ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
	# 	ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

	# 	ssl_session_timeout 5m;

	#     location / {
	# 		proxy_redirect off;
	# 		proxy_set_header Host $host;
	# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		  
	# 		# Nginx doesn't support nested If statements, so we
	# 		# concatenate compound conditions on the $cors variable
	# 		# and process later

		  
	# 		# OPTIONS indicates a CORS pre-flight request
	# 		if ($request_method = 'OPTIONS') {
	# 		   add_header 'Access-Control-Allow-Origin: *' always;
	# 		   add_header 'Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE' always;
	# 		   add_header 'Access-Control-Allow-Credentials: true' always;
	# 		   add_header 'Access-Control-Allow-Headers: Origin,Content-Type,Accept' always;
	# 		   add_header Content-Length 0;
	# 		   add_header Content-Type text/plain;
	# 		   return 204;
	# 		}
		  
	# 	   add_header 'Access-Control-Allow-Origin: *' always;
	# 	   add_header 'Access-Control-Allow-Credentials: true' always;
	# 	   proxy_pass https://www.flickr.com;
			
	# 	}
	# }
}